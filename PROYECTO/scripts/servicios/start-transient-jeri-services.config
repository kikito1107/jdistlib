import com.sun.jini.start.NonActivatableServiceDescriptor;
import com.sun.jini.start.ServiceDescriptor;

com.sun.jini.start {

    //
    // HTTPD Service
    //
    private static httpd_codebase = "";
    private static httpd_policy = "jsk-all.policy";
    private static httpd_classpath = "../lib/jini/lib/classserver.jar";
    private static httpd_impl = "com.sun.jini.tool.ClassServer";
    private static httpd_service = 
        new NonActivatableServiceDescriptor(
            httpd_codebase, httpd_policy, httpd_classpath, httpd_impl,
            new String[]{"-port", "8080", "-dir", "../lib/jini/lib-dl", "-verbose"});
	   
    //	   
    // Fiddler (Lookup Discovery Service)
    //
    private static fiddler_codebase = "http://192.168.2.190:8080/fiddler-dl.jar"
	+ " http://192.168.2.190:8080/jsk-dl.jar";
    private static fiddler_policy = "jsk-all.policy";
    private static fiddler_classpath = "../lib/jini/lib/fiddler.jar";
    private static fiddler_config = "transient-fiddler.config";
    private static fiddler_impl = "com.sun.jini.fiddler.TransientFiddlerImpl";
    private static fiddler_service = 
        new NonActivatableServiceDescriptor(
            fiddler_codebase, fiddler_policy, fiddler_classpath, 
	    fiddler_impl, new String[] { fiddler_config });
	    
    //	   
    // Mahalo (Transaction Service)
    //
    private static mahalo_codebase = "http://192.168.2.190:8080/mahalo-dl.jar"
	+ " http://192.168.2.190:8080/jsk-dl.jar";
    private static mahalo_policy = "jsk-all.policy";
    private static mahalo_classpath = "../lib/jini/lib/mahalo.jar";
    private static mahalo_config = "transient-mahalo.config";
    private static mahalo_impl = "com.sun.jini.mahalo.TransientMahaloImpl";
    private static mahalo_service = 
        new NonActivatableServiceDescriptor(
            mahalo_codebase, mahalo_policy, mahalo_classpath, 
	    mahalo_impl, new String[] { mahalo_config });
	    
    //	   
    // Mercury (Event Mailbox Service)
    //
    private static mercury_codebase = "http://192.168.2.190:8080/mercury-dl.jar"
	+ " http://192.168.2.190:8080/jsk-dl.jar";
    private static mercury_policy = "jsk-all.policy";
    private static mercury_classpath = "../lib/jini/lib/mercury.jar";
    private static mercury_config = "transient-mercury.config";
    private static mercury_impl = "com.sun.jini.mercury.TransientMercuryImpl";
    private static mercury_service = 
        new NonActivatableServiceDescriptor(
            mercury_codebase, mercury_policy, mercury_classpath, 
	    mercury_impl, new String[] { mercury_config });

    //	   
    // Norm (Lease Renewal Service)
    //
    private static norm_codebase = "http://192.168.2.190:8080/norm-dl.jar"
	+ " http://192.168.2.190:8080/jsk-dl.jar";
    private static norm_policy = "jsk-all.policy";
    private static norm_classpath = "../lib/jini/lib/norm.jar";
    private static norm_config = "transient-norm.config";
    private static norm_impl = "com.sun.jini.norm.TransientNormServerImpl";
    private static norm_service = 
        new NonActivatableServiceDescriptor(
            norm_codebase, norm_policy, norm_classpath, 
	    norm_impl, new String[] { norm_config });

    //	   
    // Outrigger (JavaSpaces(TM) Service)
    //
    private static outrigger_codebase = "http://192.168.2.190:8080/outrigger-dl.jar"
	+ " http://192.168.2.190:8080/jsk-dl.jar";
    private static outrigger_policy = "jsk-all.policy";
    private static outrigger_classpath = "../lib/jini/lib/outrigger.jar";
    private static outrigger_config = "transient-outrigger.config";
    private static outrigger_impl = "com.sun.jini.outrigger.TransientOutriggerImpl";
    private static outrigger_service = 
        new NonActivatableServiceDescriptor(
            outrigger_codebase, outrigger_policy, outrigger_classpath, 
	    outrigger_impl, new String[] { outrigger_config });

    //	   
    // Reggie (Lookup Service)
    //
    private static reggie_codebase = "http://192.168.2.190:8080/reggie-dl.jar"
	+ " http://192.168.2.190:8080/jsk-dl.jar";
    private static reggie_policy = "jsk-all.policy";
    private static reggie_classpath = "../lib/jini/lib/reggie.jar";
    private static reggie_config = "transient-reggie.config";
    private static reggie_impl = "com.sun.jini.reggie.TransientRegistrarImpl";
    private static reggie_service = 
        new NonActivatableServiceDescriptor(
            reggie_codebase, reggie_policy, reggie_classpath, 
	    reggie_impl, new String[] { reggie_config });

    static serviceDescriptors = new ServiceDescriptor[] {
        httpd_service,
	fiddler_service,
	mahalo_service,
	mercury_service,
	norm_service,
	outrigger_service,
	reggie_service
    };
}